[Unit]
Description=LLMxMapReduce Backend Service
After=network.target docker.service
Wants=network.target
Requires=docker.service

[Service]
Type=forking
User=ubuntu
Group=ubuntu
WorkingDirectory=/home/ubuntu/LLMxMapReduce/backend

# 环境变量
Environment=PATH=/home/ubuntu/miniconda3/envs/llm_mr_v2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
Environment=CONDA_DEFAULT_ENV=llm_mr_v2
Environment=CONDA_PREFIX=/home/ubuntu/miniconda3/envs/llm_mr_v2

# 启动前预检查脚本
ExecStartPre=/bin/bash -c 'cd /home/ubuntu/LLMxMapReduce && docker-compose up -d'
ExecStartPre=/bin/sleep 15
ExecStartPre=/bin/bash -c 'for i in {1..30}; do if docker-compose -f /home/ubuntu/LLMxMapReduce/docker-compose.yml exec -T postgresql pg_isready -U huanyu >/dev/null 2>&1; then break; else sleep 2; fi; done'
ExecStartPre=/bin/bash -c 'for i in {1..30}; do if docker-compose -f /home/ubuntu/LLMxMapReduce/docker-compose.yml exec -T mongodb mongosh --eval "db.runCommand(\"ping\")" >/dev/null 2>&1; then break; else sleep 2; fi; done'

# 增加启动超时时间
TimeoutStartSec=300

# 启动命令
ExecStart=/home/ubuntu/miniconda3/envs/llm_mr_v2/bin/uwsgi --ini /home/ubuntu/LLMxMapReduce/backend/uwsgi.ini

# 重载和停止命令
ExecReload=/home/ubuntu/miniconda3/envs/llm_mr_v2/bin/uwsgi --reload /tmp/uwsgi-llm-mapreduce.pid
ExecStop=/home/ubuntu/miniconda3/envs/llm_mr_v2/bin/uwsgi --stop /tmp/uwsgi-llm-mapreduce.pid

# 进程管理
PIDFile=/tmp/uwsgi-llm-mapreduce.pid
KillMode=mixed
KillSignal=SIGTERM
TimeoutStopSec=30

# 重启策略
Restart=always
RestartSec=10

# 安全设置
NoNewPrivileges=true
PrivateTmp=false

# 标准输出和错误输出
StandardOutput=append:/home/ubuntu/LLMxMapReduce/backend/logs/systemd.log
StandardError=append:/home/ubuntu/LLMxMapReduce/backend/logs/systemd_error.log

[Install]
WantedBy=multi-user.target 